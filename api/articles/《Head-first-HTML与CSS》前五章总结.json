{"title":"《Head first HTML与CSS》前五章总结","slug":"《Head-first-HTML与CSS》前五章总结","date":"2019-02-06T10:31:55.000Z","updated":"2019-03-14T15:16:03.918Z","comments":true,"path":"api/articles/《Head-first-HTML与CSS》前五章总结.json","photos":[],"link":"","excerpt":"《Head first HTML与CSS》前五章总结<br>","covers":null,"content":"<blockquote>\n<p>《Head first HTML与CSS》前五章总结<br><a id=\"more\"></a></p>\n</blockquote>\n<p>整本书一共十五章，前五章的标题分别是：<br> 一. 认识HTML——Web语言<br> 二.深入了解超文本——认识HTML中的“HT”<br> 三.构建模块——Web页面建设<br> 四.连接起来——Web镇之旅<br> 五.为你的页面增加图像——认识媒体<br>大致上前五章要学的内容标题都已经很好的概括了，同样也是H5的基础部分，有不少内容在之前刚接触H5的时候已经学过了，但为了加强理解加深记忆，就整理一遍笔记做个总结和复习。</p>\n<p><strong>认识HTML——Web语言</strong><br>HTML（Hypertext Markup Language，超文本标记语言）和CSS（Cascading Style Sheets，层叠样式表）是用来创建web网页的语言，把用它们编写的文件放到一个Web服务器上，然后任何浏览器就能够通过互联网获取你的Web页面；根据Web页面的HTML,浏览器可以了解到显示页面所需的所有信息，如果写得足够好，除了能在手机和移动设备上很好的显示，还能允许视觉有缺陷的人在语音浏览器和屏幕放大器上查看。<br>HTML是一种标记语言，标记就是那些用尖括号括起来的关键字符或词组。通过HTML，我们利用标记来标示内容建立并提供网页的主体结构；浏览器读到你的HTML时，它会翻译文本中的所有标记来得知HTML文档的结构，通过标记提供的信息，浏览器会按照内置的默认规则显示各个元素；当然你也不必受制于默认设置，完全可以用CSS增加自己的样式化和格式化规则，确定字体、颜色大小和页面的很多其他特征。<br>虽然HTML和CSS是行业标准，但不同浏览器处理页面的方式存在细微的差别。如果你的用户可能用不同的浏览器访问你的页面，一定要在多个不同的浏览器种进行测试，有些页面在各种浏览器种看起来都一样，但有些可能并非如此。<br>用<code>&lt;html&gt;</code>和<code>&lt;/html&gt;</code>标记包围的标签会告诉浏览器文件的内容是HTML；首部<code>&lt;head&gt;&lt;/head&gt;</code>标记包含着Web页面的有关信息，如页面标题；<code>&lt;body&gt;&lt;/body&gt;</code>标记之间的内容包含Web页面所有内容和结构，也是在浏览器种看到的部分。<br>标记以及它们包围的内容称为元素，元素由三部分组成：一个开始标记、内容和一个结束标记。不过有些元素（比如<code>&lt;img&gt;</code>）有所例外。<br>可以在<code>&lt;head&gt;</code>首部元素中添加<code>&lt;style&gt;</code>元素来为HTML页面增加CSS样式。<code>&lt;style&gt;</code>元素与其他元素一样有一个开始标记以及结束标记，而被包围的内容就是页面样式的定义；<code>&lt;style&gt;</code>标记还有一个可选属性名为type，它能告诉浏览器你在使用什么类型的样式，一般都是指定为“text/css”类型，可以使用CSS在HTML中指定元素的特性。<br>在用编辑器编写HTML文件时，大多数空白符（制表符、回车、空格）都会被浏览器忽略，不过可以利用空白符让你的HTML（对你）更有可读性。</p>\n<p><strong>深入了解超文本——认识HTML中的“HT”</strong><br>   了解完HTML的“ML（Markup language）”，接下来就到了“HT（hypertext）”，也就是超文本，有了它就能摆脱单个页面的束缚链接到其他页面。<br>使用<code>&lt;a&gt;</code>元素创建一个超文本链接，链接到另一个web页面；可以链接到相同文件夹中的文件，也可以链接到其他文件夹中的文件。<code>&lt;a&gt;</code>元素的内容会成为web页面中可单击的文本。href属性告诉浏览器链接的目标文件，如：<br><code>&lt;a href=”elixir.html”&gt;elixir&lt;/a&gt;</code><br><code>&lt;a&gt;</code>元素的内容就是链接文本。在浏览器中，链接文本会显示有下划线，指示这是可单击的。接着通过href属性来指定链接的目标文件，对于这个链接，浏览器会显示文本”elixir”，单击这个文本时，用户将被带往“elixir.html”页面，如果把一个<code>&lt;img&gt;</code>元素放在<code>&lt;a&gt;</code>标记之间，这个图像就会像文本一样可单击。<br>利用属性（Attributes），可以指定一个元素的附加信息，像是href属性就是告诉我们一个超链接的目标文件，type属性指定我们使用哪一种样式语言，src属性指定一个img标记显示的图像的文件名。属性的写法都是一样的：首先是属性名，后面是一个等于号，然后是用双引号括起来的属性值。<br>开始创建更多的HTML页面之前，先要组织好所有资源，即使是规模很小的网站，如果把网页、图片和其他资源分别放在不同文件夹中维护，网站也会更容易管理。包含整个网站的顶级文件夹通常被称为“根”文件夹，可以把网站的文件夹看成倒垂的树，它最上面是根，每个向下到一个文件或文件夹的路径就是一个分支。<br>在把原先文件夹里的文件移动到新文件夹后就需要我们修改链接指向已经移动到新文件夹中的文件；为此，需要追踪从页面到目标文件的路径。这可能意味着要下行一、两个文件夹，或者上行一、两个文件夹，如：<br><code>&lt;a href=”beverages/elixir.html”&gt;elixirs&lt;/a&gt;</code><br>首先，进入beverages文件夹，用“/”分隔路径中的各个部分，最后写上文件名”elixir.html”，把这个放在href值中。现在单击这个链接时，浏览器就会在”beverages”文件夹中查找”elixir.html”文件。<br>需要上行到一个父文件夹时可以用一个“..”实现，每一次使用“..”，就会向上到上一层夫文件夹。所以，如果你想上行两级文件夹，可以输入“../..”。仍然要使用“/”分隔每一部分，所以不要忘记这一点。<br>这种相对于链接的源Web页面指向网站中其他文件的一个链接的路径被称为相对路径，就像在地图上一样，终点总是相对于起点。<br>如果指向一个图像的路径不正确时，会在web页面上看到一个损坏的图像，所以在输入路径之后一定要再仔细检查一遍，为网站选择的文件名和文件夹名中不要使用空格。<br>最好在构建网站初期组织网站文件，这样就不用在网站升级时修改一大堆的路径了。</p>\n<p><strong>构建模块——Web页面建设</strong><br>开始输入内容之前要规划好web页面的结构：首先，画一个粗略的日志草图，这将作为页面设计的基础；接下来，创建HTML的基本构建模块（<code>&lt;h1&gt;、&lt;h2&gt;、&lt;h3&gt;、&lt;p&gt;</code>等）,把草图翻译成HTML页面的略图（或蓝图）。一旦有了蓝图，就可以把它翻译成真正的HTML了。<br>规划页面时，首先设计大的块元素，然后用内联元素完善，要尽可能使用元素来告诉浏览器你的内容含义。一定要使用与内容含义最接近的元素，例如，如果需要一个列表，就不要使用段落元素。<br>块元素又被称为块级元素，它们会单独显示在页面中，在内容前后分别有一个默认地换行。像是段落<code>&lt;p&gt;</code>、有序列表<code>&lt;ol&gt;</code>、无序列表<code>&lt;ul&gt;</code>和列表项<code>&lt;li&gt;</code>以及本章学到的长引用<code>&lt;blockquote&gt;</code>都是块元素。<br>与块元素不同，内联元素则不会单独显示在页面中，内联元素中的内容可以与其他包含元素的其余内容放在一起，像是本章学到的另外两个元素短引用<code>&lt;q&gt;</code>和斜体强调<code>&lt;em&gt;</code>。<br>块元素通常用作Web页面中的主要构建模块，而内联元素往往用来标记小段内容。设计一个页面时，一般先从比较大的块开始（块元素），然后在完善页面时再加入内联元素。<br>属于内联元素的<code>&lt;q&gt;</code>元素一般用于简短的引用，其中的内容在浏览器上显示时会加上双引号，但有些浏览器并不会显示。<br>比起单纯的用引号，用<code>&lt;q&gt;</code>元素做引用可以让页面更结构化，更有意义。通过标记引用，我们可以为它增加更多含义，浏览器知道这是一个引用就能用最合适的方式来显示；在其他情况下也很有用，如搜索引擎可能要搜寻包含引用的网页或者那些为有视力缺陷人士提供的语音HTML浏览器和大屏幕阅读器。<br>最重要的一个原因是，你可以对引用设置样式，使它的外观如你所愿。<br>属于块元素的<code>&lt;blockquote&gt;</code>则用于大段的长引用，它会创建一个单独的文本块，另外还把文字稍稍缩进，使它更像一个引用。<br>最好专门为<code>&lt;blockquote&gt;</code>元素用<code>&lt;p&gt;</code>元素单独列一个段落，在<code>&lt;blockquote&gt;</code>元素包含的内容中也可以使用<code>&lt;p&gt;</code>元素为其分段，当然也可以在<code>&lt;blockquote&gt;</code>元素中继续使用<code>&lt;q&gt;</code>元素作引用，虽然这完全没有意义就是了。<br>这种完全包含在另一个元素中的元素被称为“嵌套元素”，如果元素能正确地嵌套，所有标记都能正确匹配；块元素与内联元素的嵌套规则：<br>1．块状元素可包含内联元素或某些块元素，但内联元素不可包含块元素，只能包含内联元素<br>2.块级元素不能放在<code>&lt;p&gt;</code>标签以内<br>3.有几个特殊块元素只能包含内联元素，不能包含块级元素。这几个特殊标签是h1~h6、p、dt<br>4.li内可包含div标签<br>5、块级元素与块级元素并列、内联元素与内联元素并列<br>在页面上如何结合元素对于元素将显示为块元素还是内联元素有很大影响。<br>在HTML页面的文本内容中，是不能通过空格Space键或者回车Enter键进行换行的，需要在换行的位置增加<code>&lt;/br&gt;</code>元素，浏览器就会为这里插入一个“换行符”。<br>先前说过一个元素是由“&lt;开始标签&gt;+内容+&lt;/结束标签&gt;”组成，而像<code>&lt;/br&gt;</code>这种只有一个标签，没有内容与结束标签的被称为“空元素（void）”。<br>创建一个HTML列表需要两个元素，结合使用这两个元素就构成了列表第一个元素<code>&lt;ol&gt;</code>(有序列表)或<code>&lt;ul&gt;</code>（无序列表）来定义创建的列表类型，第二个元素<code>&lt;li&gt;</code>用来标记每个列表的列表项。浏览器显示一个有序列表时，它会为列表创建序号，所以无须费心。<br>与其他元素一样，有序列表可以通过属性来定义列表项；type属性定义在列表中使用的标记类型(1、A、a、Ⅰ、i)，start属性定义有序列表的起始值，reversed属性定义列表顺序为降序（9、8、7…）。<br>无序列表也可以通过属性来定义列表项，type属性定义列表项的表现形式：disc（实体圆）、circle(空心圆)、square（实体方块）。<br>还有比较特殊的自定义列表<code>&lt;dl&gt;</code>，每个自定义列表项以<code>&lt;dt&gt;</code>开始，每个自定义列表项的定义以<code>&lt;dd&gt;</code>开始。</p>\n<p><strong>连接起来——Web镇之旅</strong><br>要把网站正式发布到Web上就需要找一家服务器托管公司，在选择服务器托管公司时要考虑以下几点：</p>\n<ol>\n<li>技术支持：这家托管公司有没有一个好的系统来处理你的技术问题？比较好的公司会通过电话或邮件对你的问题迅速做出回应。</li>\n<li>数据传输：这是指托管公司允许你在一定时间内向访问者发送的页面和数据量。大多数托管公司可能会为小网站提供最基本的方案，这些方案中提供的数据传输量并不大。如果你要创建的网站可能有大量访问者，就要仔细考虑这个方面。</li>\n<li>备份：这家托管公司是否会定期对你的页面和数据做备份，从而在服务器出现硬件故障时能够恢复？</li>\n<li>域名：托管公司定价中是否包含一个域名？</li>\n<li>可靠性：大多数托管公司都声称保证网站99%以上的时间都能正常运行。</li>\n<li>赠品：是否附送了其他赠品，比如Email地址、论坛或脚本语言支持（这对你将来会很重要）?<br>如果你希望你的网站有独一无二的名字，就需要有自己的域名。这个域名就是一个唯一的名字，可以用来定位你的网站，域名还会用来将你的页面链接到其他网站。域名不是网站名，如果看到<code>www.starbuzzcoffee.com</code>就是一个网站名，如果只有“starbuzzcoffee.com”部分就是域名，还可以创建使用相同域名的其他网站，比如corporate.starbuzzcoffee.com或employees.starbuzzcoffee.com。所以域名可以用于多个网站。<br>域名由两个大部分组成，还是用<code>www.starbuzzcoffee.com</code>做例子，“www”是域中一个特定服务器的名字。“starbuzzcoffee.com”这部分是域名，“com”是域结尾，不同的域结尾有不同的用途：.com、.org、.gov、.edu，另外还可以表示不同国家：.co.uk、.co.jp等。选择一个域时，要选一个最适合你的。<br>域名由一个集中的权威机构（ICANN）控制，以确保一次只能有一个人使用某个域名，另外，要保留你的域名，每年还需要交纳少许注册费用，当然也可以将这个问题交给托管公司考虑。<br>大多数提供域名注册服务的公司都允许你搜索一个域名是否已经被占用（有点像搜索未用的车牌号）。<br>在解决了以上的问题之后剩下的就是将你自己的根文件夹转移到Web服务器上的根文件夹，托管公司可能会对你的根文件夹取很多不同的名字。重点在于你要知道你根文件夹在服务器的什么位置，而且可以把你的文件夹复制到这里。<br>把文件传送到web服务器有很多办法，不过大多数托管公司都支持一种叫做FTP（File Transfer Protocol，文件传输协议）的文件传输方法，很多应用允许你通过FTP传输文件。<br>使用FTP传输文件就要先找到一个FTP应用，有些是命令行应用，有些有完备的图形界面，它们都使用相同的命令，接着概要地介绍一下FTP的工作方式：<br>1、    首先使用FTP链接到你的服务器。<br>2、    使用“cd”命令把当前目录切换到文件传输的目标目录。<br>3、    使用“put”命令将文件上传到服务器。<br>4、    还可以用“mkdir”命令在服务器上创建一个新目录。<br>5、    还可以用“get”命令获取文件。<br>以下是FTP常用命令：<br>dir:得到当前目录的文件列表<br>cd:切换到另一个目录。“…”也表示上一层目录<br>pwd:显示当前目录。<br>put<code>&lt;filename&gt;</code>:将指定的文件传送到服务器。<br>get<code>&lt;filename&gt;</code>:从服务器获取指定的文件传回你的计算机。<br>FTP有一个更为安全的版本叫SFTP（Secure File Transfer Protocol，安全文件传输协议），工作方式与FTP基本一致，不过购买之前要确保你的FTP应用支持SFTP。一些托管公司允许你登录服务器在服务器上直接对HTML文件进行修改，想要这么做还需要了解DOS或Linux命令提示（取决于服务器上运行的操作系统）。<br>部署好之后就可以在浏览器上获取你的页面了。<br>浏览器中输入的Web地址被称为“URL（Uniform Resource Locators，统一资源定位符）”，要定位web上的某个资源，只要你知道维护这个资源的服务器，以及资源的绝对路径就可以创建一个URL，让Web浏览器使用某个协议为你获取这个资源，通常会使用HTTP。<br>HTTP也称为超文本传输协议（HyperText Transfer Protocol）。换句话说，这是在Web上传输超文本文档的公认的一种方法（协议）。尽管“超文本文档”通常只是指HTML页面，但这个协议实际上还可以用来传输图像或Web页面可能需要的任何其他文件。<br>之前在学习用<code>&lt;a&gt;</code>元素建立链接时说到了相对路径，现在要说的是URL中的绝对路径部分，就是在协议（HTTP）和网站名<code>（www.starbuzzcoffee.com）</code>之后的最后一部分；例如<code>http://www.starbuzzcoffee.com/index.html</code>中的“index.html”就是这个URL的绝对路径。<br>绝对路径告诉服务器如何从你的根文件夹到达某个特定的页面或文件，如果服务器没有得到绝对路径，它就不知道去哪里查找。<br>如果把以上所学的这些部分结合在一起，你就有了一个URL，利用URL，你可以请求浏览器从Web获取一个页面（或者其他类型的资源）；协议部分告诉浏览器应当使用什么方法来获取资源（大多数情况下，协议都是HTTP）。网站部分（由服务器和域名组成）告诉浏览器要从互联网上的哪个计算机获取资源。最后绝对路径会告诉服务器我们要找哪个页面。<br>有一种特殊的情况就是如果浏览器向Web服务器请求一个目录而不是文件时会发生什么,例如，浏览器可能会请求<code>http://www.starbuzzcoffee.com/images/</code>或<code>http://www.starbuzzcoffee.com/</code>Web服务器接收到一个类似的请求时，它会尝试查找这个目录中的一个默认文件。通常默认文件名为“index.html”或“default.htm”，如果服务器找到这样一个文件，就会把它返回给浏览器显示。<br>所以，要从根目录（或任何其他目录）默认地返回一个文件，只需要把这个文件命名为“index.html”或“default.htm（注意，“default.htm”通常结尾没有“l”。这是Microsoft Web服务器的一个怪癖）”。不过你要了解你的托管公司希望你如何命名默认文件，因为这取决于他们使用哪种类型的服务器。<br>相对路径只用来链接同一网站的页面，而URL通常用来链接其他网站。<br>浏览器从计算机本地读取文件时会使用file协议，例如，文件URLfile://chapter4/starbuzz/index.html会告诉浏览器文件“index.html”位于“/chapter4/starbuzz/”路径。取决于你的操作系统和浏览器，这个路径可能有所不同。如果你想输入一个文件URL，则要注意重要的一点是与HTTP不同，文件URL有3个斜线而不是2个。可以这样来记：如果删去一个HTTPURL中的网站名，那么也会有3个斜线。<br>除此之外还有一个mail协议：可以通过Email发送数据。大多数情况下都会使用HTTP。<br>通常Web上的所有东西都会传送到一个默认端口（80），不过有时Web服务器会配置为在另外一个不同的接收请求，如<code>http://www.mydomain.com:8000/index.html</code>，这个端口就是“8000”。这种情况经常在测试服务器上出现。正常的web服务器几乎都在端口80接收请求，如果没有指定端口，则默认为80。<br><code>&lt;a&gt;</code>元素有一个title属性，就是用来提供链接信息的，是所要连接的页面的文本描述，鼠标移动到一个链接上时，title属性会显示为一个工具提示，对于有视力障碍的人来说，浏览器可能会大声读出标题链接。<br>可以为任何元素增加title属性，所以如果希望某个元素上有一个工具提示，比如一个标题，则可以在<code>&lt;h1&gt;</code>开始标记中增加一个title属性，就像对<code>&lt;a&gt;</code>一样。有些元素不只是使用title属性作为工具提示，可能还有其他用途，不过工具提示是最常见的用法。<br>进一步完善链接时要记住以下技巧：</li>\n<li>保证链接标签很简洁。不要把整个句子或大段文字放在链接里。一般来讲，要保证只有几个单词，可以在title属性中提供额外的信息。</li>\n<li>保证链接标签是有意义的。不要使用类似“单击这里”或“这一页”之类的链接标签。用户往往会首先粗略扫一眼页面，看看有没有链接，然后才会通读页面。所以，通过提供有意义的链接，可以改善页面的可用性。</li>\n<li>不要把链接放在一起，用户将很难区分放在一起的链接。<br>可以用id属性标识元素，被id属性标识的元素有一个特殊属性：你可以直接链接这些元素，因此通过id属性可以实现在当前页面进行跳转的效果，只需要在<code>&lt;a&gt;</code>元素的链接最后加一个#，再加上目标标识符也就是id；这种跳转效果的好处是使得访问者不必向下滚动文件来查找所需的部分。<br>与title属性一样，id属性同样可以增加进任何元素之中；id一定要用一个字母开头（A~Z或a~z），不能包含空格，后面可以是任意字母、数字、横线、下划线、冒号或点号。<br>使用target属性可以设定链接在浏览器打开的位置，分别有4个属性值：_blank（在新窗口打开链接）、_self（默认在当前页面打开新链接）、_parent（在父框架集中打开被链接文档）、_top（在整个窗口中打开被链接文档）、framename（在指定框架中打开被链接文档）。</li>\n</ol>\n<p><strong>为你的页面增加图像——认识媒体</strong><br>一个吸引人的页面内容不能只有链接和文字，各种各样的图像也是必要的。通过<code>&lt;img&gt;</code>元素就能够为你的HTML页面增加图像，如：<br><code>&lt;img src=”../images/red.jpg”&gt;</code><br><code>&lt;img&gt;</code>是内联元素，也是空元素，没有结束标签，通过src指定了在web页面上显示的图像文件的位置，这个路径可以是本地的相对路径也可以是来自网络上的绝对路径。<br> 浏览器对<code>&lt;img&gt;</code>元素的处理与其他HTML元素稍有不同。读取HTML页面之后，浏览器会从web服务器获取各个图像并显示。<br> 可以为<code>&lt;img&gt;</code>元素添加alt属性为图像增加一个有意义的描述，在一些浏览器中，如果无法找到图像，就会显示这个描述，另外屏幕阅读器会使用这个属性为有视力障碍的人描述图像。<br>图像格式有很多种，但Web上最常用的只是其中3种格式：jpeg、png和GIF。<br>照片和复杂图像使用jpeg：</p>\n<ul>\n<li>最适合连续色调图像，如照片。</li>\n<li>可以表示包含多达1600万种不同颜色的图像。</li>\n<li>这是一种“有损”格式，因为缩小文件大小时会丢掉图像的一些信息。</li>\n<li>不支持透明度。</li>\n<li>文件比较小，以便Web页面更高效地显示。</li>\n<li>不支持动画。<br>单色图像、logo和几何图形使用PNG或GIF：</li>\n<li>PNG最适合单色图像和线条构成的图像（如logo、剪贴画和图像中的小文本）。</li>\n<li>PNG可以表示包含上百万中不同颜色的图像。PNG有3种：PNG-8、PNG-24和PNG32，取决于你需要表示多少种颜色。</li>\n<li>PNG会压缩文件来缩小文件大小，不过不会丢掉信息。所以这是一种“无损”格式。</li>\n<li>允许将颜色设置为“透明”，使图像下面的东西可以显示出来。</li>\n<li>与相应的JPEG文件相比，PNG文件更大一些，不过取决于使用的颜色数，可能比相应的GIF文件小，也可能更大。</li>\n<li>类似于PNG，GIF最适合单色图像和线条构成的图像（如logo、剪贴画和图像中的小文本）。</li>\n<li>GIF可以表示最多256种不同颜色的图像。</li>\n<li>GIF也是一种“无损”格式。</li>\n<li>GIF也支持透明度，不过只允许一种颜色设置为“透明“。</li>\n<li>GIF文件往往比相应的JPEG文件大。</li>\n<li>支持动画。<br>可以通过width属性和height属性来指定图像的宽度和高度，支持百分比、像素作为单位，如果没有指定宽度和高度，则浏览器在页面中显示这个图像之前会自动确定图像的大小。<br>尽管屏幕大小和分辨率可能有变化。（有些人的显示器小，有些则很大），大多数人通常都会把浏览器宽度设置为800打开1280像素之间。所以一般经验是将图像最大宽度设置为800像素。<br>屏幕上的每英寸为96像素，不过如今的显示器分辨率都很高，所以还可以更高。我们习惯使用标准的72像素/英寸（ppi），不过为了应对现代显示器，又创造了一个CSS像素的概念。CSS像素是1英寸的1/96（96ppi）。所以对于一个3“（英寸）X3“（英寸）高的图像，要使用96（像素）X3（英寸）=288X288像素。<br>可以通过像是Photoshop Elements这类的图像编辑软件修改图像大小，修改完后使用“save of web“(保存为web格式)对话框中的matte(蒙版)颜色菜单来选择合适的颜色，柔化PNG或GIF图像的边缘。<br>如果把一个透明的图像放在Web页面中，则要确保这个图像的蒙版颜色与Web页面的背景色一直。<br>图像可以用左指向其他Web页面的链接。要由图像创建一个链接，可以使用<code>&lt;img&gt;</code>元素作为<code>&lt;a&gt;</code>元素的内容，将链接放在<code>&lt;a&gt;</code>元素href中。</li>\n</ul>\n","categories":[],"tags":[{"name":"HTML5","slug":"HTML5","count":4,"path":"api/tags/HTML5.json"}]}